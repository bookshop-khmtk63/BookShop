# docker-compose.yml (Dành cho project Backend/shopbook)
version: '3.8'

services:
#  # 1. Elasticsearch Service
#  elasticsearch:
#    build:
#      context: .
#      # Docker sẽ tìm file Dockerfile trong cùng thư mục với docker-compose.yml
#      dockerfile: Dockerfile
#    container_name: shopbook-elasticsearch # Đổi tên container
#    environment:
#      - discovery.type=single-node
#      - xpack.security.enabled=false
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#    ports:
#      - "9200:9200"
#      - "9300:9300"
#    volumes:
#      - shopbook_es_data:/usr/share/elasticsearch/data # Đổi tên volume
#    networks:
#      - shopbook_network # Đổi tên network

  # 2. Redis Service
  redis:
    image: redis:7-alpine
    container_name: shopbook-redis # Đổi tên container
    ports:
      - "6379:6379"
    volumes:
      - shopbook_redis_data:/data # Đổi tên volume
    networks:
      - shopbook_network # Đổi tên network

  # 3. Zookeeper Service (Bắt buộc cho Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: shopbook-zookeeper # Đổi tên container
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - shopbook_network # Đổi tên network

  # 4. Kafka Service
  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: shopbook-kafka # Đổi tên container
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      # Kafka sẽ kết nối tới Zookeeper qua tên service trong cùng network
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      # Listener cho app Spring Boot (từ máy host) và cho các container khác
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    networks:
      - shopbook_network # Đổi tên network

# Định nghĩa các volumes để lưu trữ dữ liệu
volumes:
  shopbook_es_data: # Đổi tên
  shopbook_redis_data: # Đổi tên

# Định nghĩa một mạng chung để các container có thể giao tiếp với nhau
networks:
  shopbook_network: # Đổi tên
    driver: bridge